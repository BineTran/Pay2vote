generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model events {
  id               Int                @id @default(autoincrement())
  name             String             @db.VarChar(255)
  user_id          Int
  description      String?            @db.VarChar(500)
  avatar_path      String?            @db.VarChar(255)
  created_at       DateTime?          @default(now()) @db.Timestamp(0)
  updated_at       DateTime?          @default(now()) @db.Timestamp(0)
  users            users              @relation(fields: [user_id], references: [id], onDelete: Cascade, map: "events_ibfk_1")
  point_event_team point_event_team[]
  teams            teams[]

  @@index([user_id], map: "user_id")
}

model fi_service_account {
  id             Int       @id @default(autoincrement())
  uuid           String    @db.VarChar(255)
  code           String    @db.VarChar(255)
  name           String    @db.VarChar(255)
  type           String    @db.VarChar(255)
  logo           String    @db.VarChar(255)
  user_id        Int       @unique(map: "user_id")
  access_token   String    @db.VarChar(255)
  account_number String    @db.VarChar(255)
  account_name   String    @db.VarChar(255)
  bin            String    @db.VarChar(255)
  created_at     DateTime? @default(now()) @db.Timestamp(0)
  updated_at     DateTime? @default(now()) @db.Timestamp(0)
  users          users     @relation(fields: [user_id], references: [id], onDelete: Cascade, onUpdate: NoAction, map: "fi_service_account_ibfk_1")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model teams {
  id               Int                @id @default(autoincrement())
  name             String             @db.VarChar(255)
  description      String             @db.VarChar(255)
  avatar_name      String?            @db.VarChar(255)
  event_id         Int
  created_at       DateTime?          @default(now()) @db.Timestamp(0)
  updated_at       DateTime?          @default(now()) @db.Timestamp(0)
  point_event_team point_event_team[]
  events           events             @relation(fields: [event_id], references: [id], onDelete: Cascade, map: "teams_ibfk_2")
  transactions     transactions[]

  @@index([event_id], map: "event_id")
}

model transactions {
  id                      Int       @id @default(autoincrement()) @db.UnsignedInt
  team_id                 Int?
  transaction_datetime    DateTime  @db.DateTime(0)
  reference               String    @db.VarChar(255)
  payment_chanel          String    @db.VarChar(255)
  counter_account_bank_id String    @db.VarChar(255)
  counter_account_number  String    @db.VarChar(255)
  counter_account_name    String    @db.VarChar(255)
  description             String    @db.VarChar(255)
  status                  String?   @db.VarChar(255)
  amount                  Int?
  transaction_status      String?   @default("not_started") @db.VarChar(255)
  updated_at              DateTime? @db.Timestamp(0)
  created_at              DateTime? @db.Timestamp(0)
  teams                   teams?    @relation(fields: [team_id], references: [id], onDelete: Cascade, map: "transactions_ibfk_1")

  @@index([team_id], map: "team_id")
}

model users {
  id                 Int                 @id @default(autoincrement())
  username           String              @unique(map: "username") @db.VarChar(255)
  password           String              @db.VarChar(255)
  name               String?             @db.VarChar(255)
  created_at         DateTime?           @default(now()) @db.DateTime(0)
  updated_at         DateTime?           @default(now()) @db.DateTime(0)
  events             events[]
  fi_service_account fi_service_account?
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model vote_price {
  id         Int       @id @default(autoincrement())
  event_id   Int
  price      Int
  point      Int
  created_at DateTime? @default(now()) @db.Timestamp(0)
  updated_at DateTime? @default(now()) @db.Timestamp(0)

  @@unique([event_id, price, point], map: "unique_constraint_name")
}

/// This model or at least one of its fields has comments in the database, and requires an additional setup for migrations: Read more: https://pris.ly/d/database-comments
model point_event_team {
  id         Int       @id @default(autoincrement())
  point      Int
  event_id   Int
  team_id    Int
  created_at DateTime? @default(now()) @db.Timestamp(0)
  updated_at DateTime? @default(now()) @db.Timestamp(0)
  events     events    @relation(fields: [event_id], references: [id], onDelete: Cascade, map: "point_event_team_ibfk_1")
  teams      teams     @relation(fields: [team_id], references: [id], onDelete: Cascade, map: "point_event_team_ibfk_2")

  @@index([event_id], map: "event_id")
  @@index([team_id], map: "team_id")
}

model banks {
  id                Int     @id
  name              String  @db.VarChar(255)
  code              String  @db.VarChar(50)
  bin               String  @db.VarChar(50)
  shortName         String  @db.VarChar(255)
  logo              String  @db.VarChar(500)
  transferSupported Int  @default(0)
  lookupSupported   Int  @default(0)
  short_name        String  @db.VarChar(50)
  support           Int     @default(0)
  isTransfer        Int @default(0)
  swift_code        String? @db.VarChar(50)
}
